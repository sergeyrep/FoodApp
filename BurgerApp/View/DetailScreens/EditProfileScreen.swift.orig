import SwiftUI

struct EditProfileScreen: View {
  @EnvironmentObject var vm: AuthViewModel
  let user: User
  @State var newName: String = ""
  @State var newEmail: String = ""
  
  @Environment(\.managedObjectContext) private var context
  
  var body: some View {
    VStack {
      mainTitle("Профиль", color: .reds)
      HStack {
        textFieldForEdit
        Spacer()
        buttonSaveName
      }.padding(.trailing, 10)
      
      HStack {
        changeInfo(title: "email not", text: $newEmail, placeholder: user.email ?? "not email")
        Spacer()
        buttonSaveEmail
      }.padding()
    }
<<<<<<< HEAD
  
=======
  }
  
  private func changeInfo(
    title: String,
    text: Binding<String>,
    placeholder: String
  ) -> some View {
    TextField(title, text: text, prompt: Text(placeholder))
      .textFieldStyle()
  }
  
  @ViewBuilder
  private var textFieldForEdit: some View {
    TextField("Name not", text: $newName, prompt:
                Text(user.name ?? "Name not")
      .foregroundColor(.color)
    )
    .textFieldStyle()
    .foregroundColor(.black)
    .padding()
  }
  
  private var buttonSaveName: some View {
    Button {
      vm.updataCurrentUser(newName)
    } label: {
      Text("Сохранить")
    }
    .buttonStyle(.bordered)
  }
  
  private var buttonSaveEmail: some View {
    Button {
      vm.updataCurrentEmail(newEmail)
    } label: {
      Text("Сохранить")
    }
    .buttonStyle(.bordered)
  }
>>>>>>> a945419 (profileScreen)
}

//если опционально
//      if let userName = vm.currentUser {
//        TextField("Name", text: Binding(
//          get: { userName.name ?? "Name not" },
//          set: { vm.currentUser?.name = $0 }
//        ))
//      } else {
//        Text("Loading...")
//      }

//#Preview {
//  let context = PersistenceController.shared.container.viewContext
//  let authVM = AuthViewModel(context: context)
//  let user: User = .init(context: context)
//
//  EditProfileScreen(user: user)
//    .environmentObject(authVM)
//    .environment(\.managedObjectContext, context)
//}
